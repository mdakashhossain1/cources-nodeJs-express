<div class="container mx-auto px-4 py-8">
    <!-- Header Section -->
    <div class="glass-morphism p-8 text-center mb-12">
        <h1 class="text-4xl font-bold text-white mb-4">Available Courses</h1>
        <p class="text-white/80 text-lg">Explore our wide range of professional courses</p>
    </div>

    <!-- Filters Section -->
    <div class="glass-morphism p-6 mb-8">
        <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
            <div>
                <label class="block text-white mb-2">Level</label>
                <select id="levelFilter" class="w-full p-2 rounded bg-white/10 border border-white/20 text-white">
                    <option value="">All Levels</option>
                    <option value="beginner">Beginner</option>
                    <option value="intermediate">Intermediate</option>
                    <option value="advanced">Advanced</option>
                </select>
            </div>
            <div>
                <label class="block text-white mb-2">Duration</label>
                <select id="durationFilter" class="w-full p-2 rounded bg-white/10 border border-white/20 text-white">
                    <option value="">Any Duration</option>
                    <option value="short">Short (< 6 weeks)</option>
                    <option value="medium">Medium (6-10 weeks)</option>
                    <option value="long">Long (> 10 weeks)</option>
                </select>
            </div>
            <div>
                <label class="block text-white mb-2">Price Range</label>
                <select id="priceFilter" class="w-full p-2 rounded bg-white/10 border border-white/20 text-white">
                    <option value="">Any Price</option>
                    <option value="0-50">$0 - $50</option>
                    <option value="51-100">$51 - $100</option>
                    <option value="101+">$101+</option>
                </select>
            </div>
            <div>
                <label class="block text-white mb-2">Sort By</label>
                <select id="sortBy" class="w-full p-2 rounded bg-white/10 border border-white/20 text-white">
                    <option value="newest">Newest First</option>
                    <option value="price-low">Price: Low to High</option>
                    <option value="price-high">Price: High to Low</option>
                    <option value="title">Title</option>
                </select>
            </div>
        </div>
    </div>

    <!-- Courses Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6" id="coursesGrid">
        <% if (courses && courses.length > 0) { %>
            <% courses.forEach(course => { %>
                <div class="glass-morphism p-6 course-card transform hover:scale-105 transition-transform duration-300">
                    <h3 class="text-xl font-bold text-white mb-3"><%= course.title %></h3>
                    <p class="text-white/70 mb-4 line-clamp-3"><%= course.description %></p>
                    <div class="flex justify-between items-center mb-4">
                        <span class="text-white font-bold">$<%= course.price %></span>
                        <span class="bg-white/20 text-white px-2 py-1 rounded-full text-sm">
                            <%= course.level %>
                        </span>
                    </div>
                    <div class="flex justify-between items-center mb-4">
                        <span class="text-white/70"><%= course.duration %></span>
                        <span class="text-white/70">By <%= course.instructor %></span>
                    </div>
                    <a href="/courses/<%= course.id %>" 
                       class="block w-full bg-white text-purple-600 text-center py-2 rounded-lg hover:bg-purple-100 transition duration-300">
                        Learn More
                    </a>
                </div>
            <% }) %>
        <% } else { %>
            <div class="col-span-3 text-center text-white/70">
                <p>No courses available at the moment.</p>
            </div>
        <% } %>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
    // Filter functionality
    const filters = ['level', 'duration', 'price'];
    filters.forEach(filter => {
        document.getElementById(filter + 'Filter').addEventListener('change', filterCourses);
    });

    // Sort functionality
    document.getElementById('sortBy').addEventListener('change', sortCourses);

    function filterCourses() {
        const courseCards = document.querySelectorAll('.course-card');
        courseCards.forEach(card => {
            let visible = true;
            
            // Apply each filter
            const level = document.getElementById('levelFilter').value;
            const price = document.getElementById('priceFilter').value;
            const duration = document.getElementById('durationFilter').value;

            if (level && card.dataset.level !== level) visible = false;
            if (price) {
                const coursePrice = parseFloat(card.dataset.price);
                const [min, max] = price.split('-').map(p => p.replace('+', ''));
                if (max && (coursePrice < min || coursePrice > max)) visible = false;
                if (!max && coursePrice < min) visible = false;
            }
            // Add more filter conditions as needed

            card.style.display = visible ? 'block' : 'none';
        });
    }

    function sortCourses() {
        const sortBy = document.getElementById('sortBy').value;
        const coursesGrid = document.getElementById('coursesGrid');
        const courseCards = Array.from(document.querySelectorAll('.course-card'));

        courseCards.sort((a, b) => {
            switch(sortBy) {
                case 'price-low':
                    return parseFloat(a.dataset.price) - parseFloat(b.dataset.price);
                case 'price-high':
                    return parseFloat(b.dataset.price) - parseFloat(a.dataset.price);
                case 'title':
                    return a.querySelector('h3').textContent.localeCompare(b.querySelector('h3').textContent);
                default:
                    return 0;
            }
        });

        courseCards.forEach(card => coursesGrid.appendChild(card));
    }

    // Enroll functionality
    window.enrollCourse = async (courseId) => {
        try {
            const response = await fetch(`/courses/${courseId}/enroll`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            });

            if (response.ok) {
                alert('Successfully enrolled in the course!');
                window.location.href = `/courses/${courseId}`;
            } else {
                throw new Error('Failed to enroll');
            }
        } catch (error) {
            alert('Error enrolling in course: ' + error.message);
        }
    };
});
</script> 